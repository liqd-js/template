:ws
    =/[\s\n]+/

:string
	=/"(?<string>([^\\"\r\n]|\\[^\r\n])*?)"/
	=/'(?<string>([^\\'\r\n]|\\[^\r\n])*?)'/

	$ => Util.unescape( $.string )

:expression_source
    source=/(?:"(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|\/(?!(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*)|<(?!((@[a-zA-Z][a-zA-Z0-9_:-]*|[a-z#][a-z0-9_:-]*|[A-Z]([\/.]?[a-zA-Z0-9_-])*)([\s\n]+[a-zA-Z_]|[\s\n]*>)|>))|[^{}"'`<\r\n\/]+)+/
    "{" blocks=...:expression_source "}"

    $ => $.hasOwnProperty( 'source' ) ? $.source : '\n{\n' + $.blocks.join('') + '\n}\n'

:content
    "{" ?:ws "$content" ?:ws "}"

:expression
    escaped=?"#" "{" source=...:expression_source "}"
    
    $ => ({ escaped: Boolean( $.escaped ), code: $.source.join('') })

:attribute
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/ "=" =:expression
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/ "=" value=:string
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/
    escaped=?"#" "{" filter=?/\[(?<wildcards>[^\]]+)\]/ "..." spread=:expression_source "}"

:declaration
    "<!" name=/[a-zA-Z][a-zA-Z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws ">"

:prolog
    "<?" name=/[a-zA-Z][a-zA-Z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws "?>"

:htmlcomment
    =/<!\-\-(?<comment>(\n|.)*?)\-\->/

    $ => $.comment

:style
    "<style" ?:ws attributes=?...[:ws]:attribute ?:ws ">" source=/(.|\n)*?(?=<\/style>)/ "</style>"

:script
    "<script" ?:ws attributes=?...[:ws]:attribute ?:ws ">" source=/(.|\n)*?(?=<\/script>)/ "</script>"

:destination
    "<@" name=/[a-zA-Z][a-zA-Z0-9_:-]*/ ?:ws "/>"

:reference
    "<@" name=/[a-zA-Z][a-zA-Z0-9_:-]*/ ?:ws ">" nodes=?...:node "</@" $name ">"

:tag
    "<" name=/[a-z#][a-z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws ">" nodes=?...:node "</" $name ">"
    "<" name=/[a-z#][a-z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws "/>"

:template
    "<" name=/[A-Z]([/.]?[a-zA-Z0-9_-])*/ ?:ws props=?...[:ws]:attribute ?:ws ">" nodes=?...:node "</" $name ">"
    "<" name=/[A-Z]([/.]?[a-zA-Z0-9_-])*/ ?:ws props=?...[:ws]:attribute ?:ws "/>"

:dynamic_tag
    "<{" name=...:expression_source "}" ?:ws props=?...[:ws]:attribute ?:ws ">" nodes=?...:node "</>"
    "<{" name=...:expression_source "}" ?:ws props=?...[:ws]:attribute ?:ws "/>"

    $ => ( $.name = $.name.join(''), $ )

:fragment
    "<>" nodes=?...:node "</>"

:text
    =/[^<{}\r\n]+?(?=[\s]*([<{}\r\n]|#\{|\/[/*]|$))/

:parenthesis
    source=/("(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|[^()"'`]+)+/
    "(" blocks=?...:parenthesis ")"

    $ => $.hasOwnProperty( 'source' ) ? $.source : '( ' + $.blocks.join('') + ' )'

:condition
    parentheses=...:parenthesis

    $ => $.parentheses.join('')

:javascript_source
    source=/(?:"(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|\/(?!(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*)|<(?!((@[a-zA-Z][a-zA-Z0-9_:-]*|[a-z#][a-z0-9_:-]*|[A-Z]([\/.]?[a-zA-Z0-9_-])*)([\s\n]+[a-zA-Z_]|[\s\n]+\{|[\s\n]*\/?>)|>))|[^{}"'`<\/]+)+/
    =:style
    =:script
    =:tag
    =:template
    =:dynamic_tag
    =:fragment
    "{" blocks=?...:javascript_source "}"

:if
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}" ?:ws "else" ?:ws else=:if
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}" ?:ws "else" ?:ws "{" else=...:javascript_source "}"
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}"

:for
    "for" ?:ws "(" =:condition ")" ?:ws "{" for=...:javascript_source "}"

:javascript
    =:if
    =:for
    "{" blocks=?...:javascript_source "}"

:comment
    "//" /[^\n]*/
    "/*" /[\s\S]*?\*\//

:node
    whitespace=:ws
    =:declaration
    =:prolog
    =:style
    =:script
    =:tag
    =:template
    =:destination
    =:reference
    =:dynamic_tag
    =:fragment
    =:content
    =:expression
    =:javascript
    =:htmlcomment
    =:comment
    =:text

:main
	nodes=...:node