:ws
    =/[\s\n]+/

:string
	=/"(?<string>([^\\"\r\n]|\\[^\r\n])*?)"/
	=/'(?<string>([^\\'\r\n]|\\[^\r\n])*?)'/

	$ => Util.unescape( $.string )

:space
    =:ws

    $ => $_node_space( $.ws )

:expression_source
    source=/(?:"(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|<(?!(([a-z#][a-z0-9_:-]*|[A-Z][a-zA-Z0-9_.-]*)([\s\n]+[a-zA-Z_]|[\s\n]*>)|>))|[^{}"'`<\r\n]+)+/
    "{" blocks=...:expression_source "}"

    $ => $.hasOwnProperty( 'source' ) ? $.source : '\n{\n' + $.blocks.join('') + '\n}\n'

:expression
    escaped=?"#" "{" expression=...:expression_source "}"
    
    $ => $_expression( $.expression.join('') );

:expression_node
    =:expression

    $ => $_node_expression( $.expression );

:attribute
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/ "=" =:expression
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/ "=" value=:string
	name=/[a-zA-Z_][a-zA-Z0-9_:-]*/
    "{" filter=?/\[(?<wildcards>[^\]]+)\]/ "..." spread=/[a-zA-Z_$][a-zA-Z0-9_$]*/ "}"

    $ => $

:html_declaration
    "<!" tag=/[a-zA-Z][a-zA-Z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws ">"

    declaration => $_node_html_declaration( declaration.tag, declaration.attributes )

:html_comment
    =/<!\-\-(?<comment>(\n|.)*?)\-\->/

    $ => $_node_comment( $.comment )

:html
    "<" tag=/[a-z#][a-z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws ">" nodes=?...:node "</" $tag ">"
    "<" tag=/[a-z#][a-z0-9_:-]*/ ?:ws attributes=?...[:ws]:attribute ?:ws "/>"

    html => $_node_html( html.tag, html.attributes, html.nodes ? html.nodes.join('\n') : undefined )

:template
    "<" name=/[A-Z][a-zA-Z0-9_.-]*/ ?:ws props=?...[:ws]:attribute ?:ws ">" nodes=?...:node "</" $name ">"
    "<" name=/[A-Z][a-zA-Z0-9_.-]*/ ?:ws props=?...[:ws]:attribute ?:ws "/>"

    template => $_node_template( template.name, template.attributes, template.nodes ? template.nodes.join('\n') : undefined )

:text
    =/[^<{}\r\n]+?(?=[\s]*([<{}\r\n]|#\{|\/[/*]))/

    $ => $_node_text( $ )

:parenthesis
    source=/("(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|[^()"'`]+)+/
    "(" blocks=?...:parenthesis ")"

    $ => $.hasOwnProperty( 'source' ) ? $.source : '( ' + $.blocks.join('') + ' )'

:condition
    parentheses=...:parenthesis

    $ => $.parentheses.join('')


:javascript_source
    source=/(?:"(?:[^\\"\r\n]|\\[^\r\n])*?"|'(?:[^\\'\r\n]|\\[^\r\n])*?'|`(?:[^\\`]|\\.)*?`|\/(?:(?![*+?])(?:[^\r\n\[\/\\]|\\.|\[(?:[^\r\n\]\\]|\\.)*\])+)\/[gmi]*|<(?!(([a-z#][a-z0-9_:-]*|[A-Z][a-zA-Z0-9_.-]*)([\s\n]+[a-zA-Z_]|[\s\n]*\/?>)|>))|[^{}"'`<]+)+/
    source=:html
    source=:template
    "{" blocks=?...:javascript_source "}"

    $ => $.hasOwnProperty( 'source' ) ? $.source : '\n{\n' + $.blocks.join('') + '\n}\n'

:if
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}" ?:ws "else" ?:ws else_if=:if
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}" ?:ws "else" ?:ws "{" else=...:javascript_source "}"
    "if" ?:ws "(" =:condition ")" ?:ws "{" if=...:javascript_source "}"

    $ => 'if( ' + $.condition + ' )\n{\n' + $.if.join('') + '\n}\n' + ( $.hasOwnProperty( 'else_if' ) ? 'else ' + $.else_if : ( $.hasOwnProperty( 'else' ) ? 'else\n{\n' + $.else.join('') + '\n}\n' : '' ));

:for
    "for" ?:ws "(" =:condition ")" ?:ws "{" for=...:javascript_source "}"

    $ => 'for( ' + $.condition + ' )\n{\n' + $.for.join('') + '\n}\n'

:javascript
    source=:if 
    source=:for 

    $ => $.source

:comment
    "//" /[^\n]*/
    "/*" /[\s\S]*?\*\//

    $ => '';

:node
    source=:space
    source=:comment
    source=:html_comment
    source=:html_declaration
    source=:html
    source=:template
    source=:javascript
    source=:expression_node
    source=:text

    $ => $.source;

:main
	nodes=...:node

    $ => $.nodes.join('');